
// 定义两个字符串变量来存储输入的数字
    string s1, s2;

// 定义三个数组来存储每个数字的每一位，并初始化为0
int a1[210] = {0}, a2[210] = {0}, a3[210] = {0};

// 从标准输入读取两个字符串
getline(cin, s1);
getline(cin, s2);

// 将第一个字符串的每一位转换为整数并存储在数组a1中，低位存储在低索引处
for(int i = 0; i < s1.size(); i++) {
    a1[s1.size() - i] = s1[i] - '0';
}

// 将第二个字符串的每一位转换为整数并存储在数组a2中，低位存储在低索引处
for(int i = 0; i < s2.size(); i++) {
    a2[s2.size() - i] = s2[i] - '0';
}

// 计算两个字符串的最大长度
int len = max(s1.size(), s2.size());

// 逐位相加两个数组中的数字
for(int i = 1; i <= len; i++) {
    a3[i] = a1[i] + a2[i];
}

// 处理进位
for(int i = 1; i <= len; i++) {
    if(a3[i] >= 10) {
        a3[i + 1] += a3[i] / 10; // 将进位加到下一位
        a3[i] %= 10; // 当前位取模10
    }
}

// 如果最高位有进位，则长度加1
if(a3[len + 1]) {
    len++;
}

// 从高位到低位输出结果数组a3中的每一位
for(int i = len; i > 0; i--) {
    cout << a3[i];
}
